#!/bin/sh
# postrm script for udm-boot
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    purge|remove|upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)

        if [ "$1" = "remove" ] || [ "$1" = "purge" ]; then

            echo "Remove container"
            /sbin/ssh-proxy "/usr/bin/podman container exists udm-boot && /usr/bin/podman rm --force --volumes udm-boot || true" | sed 's/^/  /' 
            /sbin/ssh-proxy "[ -f /run/udm-boot.service-cid ] && rm -v /run/udm-boot.service-cid || true" | sed 's/^/  /'
            /sbin/ssh-proxy "[ -f /run/udm-boot.service-pid ] && rm -v /run/udm-boot.service-pid || true" | sed 's/^/  /'

        fi

        if [ "$1" = "purge" ]; then

            echo "Clean images and volumes"
            /sbin/ssh-proxy "/usr/bin/podman image rm localhost/udm-boot localhost/podman localhost/systemd" | sed 's/^/  /'
            /sbin/ssh-proxy "/usr/bin/podman image prune" | sed 's/^/  /'
            /sbin/ssh-proxy "/usr/bin/podman volume prune --force" | sed 's/^/  /'

        fi

    ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
